{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "end-to-end-Abhishek-sarda-df"
		},
		"Az_Sqldb_Capstone_ls_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Az_Sqldb_Capstone_ls'"
		},
		"AzureDataLakeStorageLinkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageLinkedService'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureSqlDatabaseCapstone_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabaseCapstone'"
		},
		"Az_Sqldb_Capstone_ls_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "azsqlb.database.windows.net"
		},
		"Az_Sqldb_Capstone_ls_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sqldb"
		},
		"Az_Sqldb_Capstone_ls_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Abhishek"
		},
		"AzureDataLakeStorageLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://endtoendproj.dfs.core.windows.net/"
		},
		"AzureDatabricks1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1010-141916-98msobkh"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://end-to-end-key-abhi.vault.azure.net/"
		},
		"AzureSqlDatabaseCapstone_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "azsqlb.database.windows.net"
		},
		"AzureSqlDatabaseCapstone_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sqldb"
		},
		"AzureSqlDatabaseCapstone_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Abhishek"
		},
		"sqlserverazuresql_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "adfpractiseazuresqldb.database.windows.net"
		},
		"sqlserverazuresql_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AzureSQLDB"
		},
		"sqlserverazuresql_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Abhishek"
		},
		"csv_event_trig_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/7d348250-662f-42a3-8219-554d3d6e9ea5/resourceGroups/end-to-end-rg/providers/Microsoft.Storage/storageAccounts/endtoendproj"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/capstone_project_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Capstone_ADF_DataBricks",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Workspace/Users/abhisheksarda05@gmail.com/data_validation"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Capstone_ADF_DataBricks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Capstone_ADF_DataBricks').output.runOutput, 'PASS')\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "capstone_proj_excel_ls",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable2",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]",
				"[concat(variables('factoryId'), '/datasets/capstone_proj_excel_ls')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_text_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filepath",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_text_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sink_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_source_text_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_validate_file_exists')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_file_metadata_config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT \n            MAX(CASE WHEN property_name = ''container_name'' THEN property_value END) AS container_name,\n    \n            MAX(CASE WHEN property_name = ''folder_name'' THEN property_value END) AS folder_name,\n    \n            MAX(CASE WHEN property_name = ''file_name'' THEN property_value END) AS file_name FROM dbo.etl_metadata_config WHERE etl_job_name = ',\n            '''',\n            pipeline().parameters.p_etl_job_name,\n            ''''\n            )",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "get_all_files",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "get_file_metadata_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@activity('get_file_metadata_config').output.firstRow.file_name",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_etl_job_name": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_metadata_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "check_if_file_exists",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*.csv"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlserverazuresql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "etl_metadata_config"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sqlserverazuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Az_Sqldb_Capstone_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Target",
					"table": "training_retail_supply_chain_data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Az_Sqldb_Capstone_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemaname": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{concat(dataset().tablename,'.parquet')}",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@{concat(dataset().schemaname,'/',dataset().tablename)}",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "AddressID",
						"type": "UTF8"
					},
					{
						"name": "AddressLine1",
						"type": "UTF8"
					},
					{
						"name": "AddressLine2",
						"type": "UTF8"
					},
					{
						"name": "City",
						"type": "UTF8"
					},
					{
						"name": "StateProvince",
						"type": "UTF8"
					},
					{
						"name": "CountryRegion",
						"type": "UTF8"
					},
					{
						"name": "PostalCode",
						"type": "UTF8"
					},
					{
						"name": "rowguid",
						"type": "UTF8"
					},
					{
						"name": "ModifiedDate",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_adls_file_address')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Address.csv",
						"folderPath": "dbo/Address",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PAR1\u0015\u0000\u0015�2\u0015�\u001c\u0015����\u0003\u001c\u0015�\u0007\u0015\u0000\u0015\u0006\u0015\b\u0000\u0000�\u0019D\u0003\u0000\u0000\u0000�\u0007\u0001\u0001\u0000\u0000\u00009\u0002\u0000\u0000\u000011\u0001\u0006\u000425\u0005\u0006\u00008\u0001\u0006\u000432\u0001$\b185\u0001\u0007\b297\u0001\u0007\u000444\u0005\u000e\b446\t\u000e",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/capstone_proj_excel_ls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "training_retail_supply_chain_data.xlsx",
						"fileSystem": "source"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_json_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "gold_folder_1",
						"fileSystem": "gold"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver_folder_1",
						"fileSystem": "silver"
					},
					"compressionCodec": "none"
				},
				"schema": [
					{
						"name": "FL_DATE",
						"type": "DATE"
					},
					{
						"name": "DEP_DELAY",
						"type": "INT_16"
					},
					{
						"name": "ARR_DELAY",
						"type": "INT_16"
					},
					{
						"name": "AIR_TIME",
						"type": "INT_16"
					},
					{
						"name": "DISTANCE",
						"type": "INT_16"
					},
					{
						"name": "DEP_TIME",
						"type": "FLOAT"
					},
					{
						"name": "ARR_TIME",
						"type": "FLOAT"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_text_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "gold_folder_1",
						"fileSystem": "gold"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_source_text_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "final_dataset.csv",
						"folderPath": "silver_folder_1/Monash_data_wrangling",
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "HomeTeam",
						"type": "String"
					},
					{
						"name": "AwayTeam",
						"type": "String"
					},
					{
						"name": "FTHG",
						"type": "String"
					},
					{
						"name": "FTAG",
						"type": "String"
					},
					{
						"name": "FTR",
						"type": "String"
					},
					{
						"name": "HTGS",
						"type": "String"
					},
					{
						"name": "ATGS",
						"type": "String"
					},
					{
						"name": "HTGC",
						"type": "String"
					},
					{
						"name": "ATGC",
						"type": "String"
					},
					{
						"name": "HTP",
						"type": "String"
					},
					{
						"name": "ATP",
						"type": "String"
					},
					{
						"name": "HM1",
						"type": "String"
					},
					{
						"name": "HM2",
						"type": "String"
					},
					{
						"name": "HM3",
						"type": "String"
					},
					{
						"name": "HM4",
						"type": "String"
					},
					{
						"name": "HM5",
						"type": "String"
					},
					{
						"name": "AM1",
						"type": "String"
					},
					{
						"name": "AM2",
						"type": "String"
					},
					{
						"name": "AM3",
						"type": "String"
					},
					{
						"name": "AM4",
						"type": "String"
					},
					{
						"name": "AM5",
						"type": "String"
					},
					{
						"name": "MW",
						"type": "String"
					},
					{
						"name": "HTFormPtsStr",
						"type": "String"
					},
					{
						"name": "ATFormPtsStr",
						"type": "String"
					},
					{
						"name": "HTFormPts",
						"type": "String"
					},
					{
						"name": "ATFormPts",
						"type": "String"
					},
					{
						"name": "HTWinStreak3",
						"type": "String"
					},
					{
						"name": "HTWinStreak5",
						"type": "String"
					},
					{
						"name": "HTLossStreak3",
						"type": "String"
					},
					{
						"name": "HTLossStreak5",
						"type": "String"
					},
					{
						"name": "ATWinStreak3",
						"type": "String"
					},
					{
						"name": "ATWinStreak5",
						"type": "String"
					},
					{
						"name": "ATLossStreak3",
						"type": "String"
					},
					{
						"name": "ATLossStreak5",
						"type": "String"
					},
					{
						"name": "HTGD",
						"type": "String"
					},
					{
						"name": "ATGD",
						"type": "String"
					},
					{
						"name": "DiffPts",
						"type": "String"
					},
					{
						"name": "DiffFormPts",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "sink"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Az_Sqldb_Capstone_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Az_Sqldb_Capstone_ls_properties_typeProperties_server')]",
					"database": "[parameters('Az_Sqldb_Capstone_ls_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Az_Sqldb_Capstone_ls_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Az_Sqldb_Capstone_ls_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageLinkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageLinkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4009298932636552.12.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseCapstone')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabaseCapstone_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabaseCapstone_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabaseCapstone_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabaseCapstone_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlserverazuresql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('sqlserverazuresql_properties_typeProperties_server')]",
					"database": "[parameters('sqlserverazuresql_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('sqlserverazuresql_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "password"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_event_trig')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/gold/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('csv_event_trig_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "capstone_proj_excel_ls",
								"type": "DatasetReference"
							},
							"name": "CapstoneDataFlow"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sink_ds",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Date as date,",
						"          Product_ID as short,",
						"          Product_Name as string,",
						"          Category as string,",
						"          Units_Sold as short,",
						"          Revenue as short,",
						"          Stock_Level as short,",
						"          Reorder_Threshold as short,",
						"          Supplier_ID as short,",
						"          Supplier_Rating as short,",
						"          Discount_Applied as short,",
						"          Return_Flag as boolean",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> CapstoneDataFlow",
						"CapstoneDataFlow derive(Price_per_product = round(iif(Units_Sold != 0, (Revenue + (Discount_Applied / 100 * Revenue)) / Units_Sold, 0), 2)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/capstone_proj_excel_ls')]",
				"[concat(variables('factoryId'), '/datasets/sink_ds')]"
			]
		}
	]
}